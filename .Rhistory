help()
mean(abs(rnorm(100)))
mean(abs(rnorm(100)))
rnorm(100)
abs(rnorm(10)
quit
abs(rnorm(10))
plot(abs(rnorm(10)))
plot(rnorm(10))
x <- c(1,2,4)
q <- c(x,x,7)
q
x
x[3]
q[5]
x
x[2:3]
mean(x)
sd(x)
avg(x)
y<- mean(x)
y
clear(q)
y # print out y
setwd("~/R Files")
data()
mean(Nile)
hist(Nile)
hist(women)
plot(women)
hist(women,breaks=12)
plot(women,breaks=12)
q()
read.csv(kerrSdgePowerUseage.csv)
read.csv("KerrSdgePowerUseage.csv"")
read.csv("KerrSdgePowerUseage.csv")
str(KerrSdgePowerUseage.csv)
str("KerrSdgePowerUseage.csv"")
str("KerrSdgePowerUseage.csv")
pwr_tbl <- read.csv("KerrSdgePowerUseage.csv")
str(pwr_tbl)
pwr_tbl
kwh <- pwr_tbl[,4]
kwh
summary(kwh)
d+d
2+2
install.packages("robust")
data(breslow.dat, package="robust")
names(breslow.dat)
str(breslow.dat)
library(ggplot2)
load(diamonds)
data(diamonds)
plot(diamonds$carat)
hist(diamonds$carat, xlab = 'Carat')
plot(diamonds$carat, diamonds$price)
ggplot(diamonds=diamonds) + geom_histogram(aes(x=carat))
ggplot(data=diamonds) + geom_histogram(aes(x=carat))
ggplot(data=diamonds) + geom_density(aes(x=carat))
ggplot(data=diamonds) + geom_density(aes(x=carat), fill='grey50')
ggplot(data=diamonds) + geom_density(aes(x=carat), fill='grey40')
ggplot(data=diamonds) + geom_density(aes(x=carat), fill='grey20')
ggplot(data=diamonds) + geom_density(aes(x=carat), fill='grey60')
ggplot(diamonds, aes(x=carat,y=price)) + geom_point()
g <- ggplot(diamonds,aes(x=carat,y=price))
g + geom_point(aes(color=color))
g + geom_point()
g + geom_point(aes(color=color))
g + geom_point(aes(color=carat))
str(diamonds)
g + geom_point(aes(color=clarity))
say.hello <- function() {
print("Hello, World!")
}
say.hello
say.hello()
sprintf('Hello' %s, 'World')
sprintf('Hello %s', 'World')
hello.person <- function(name) {
sprintf('Hello %s', 'name')
}
hello.person(Macy)
hello.person <- function(name) {
sprintf('Hello %s', name)
}
hello.person(Macy)
hello.person("Macy")
double.num <- function(x)
{
x * 2
}
double.num(4)
double.num <- function(x)
{
return(x * 2)
}
double.num(4)
double.list <- function(list)
{
return(list * 2)
}
x <- c(1,2,3,4)
double.list(x)
```{r}
summary(cars)
plot(cars)
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df
df[df$x == 2,]
melt(df)
library(reshape2)
melt(df)
df[c(1,3),]
df
df[df$x == 3,]
mtcars
str(mtcars)
mtcars[mtcars$cyl == 4,]
mtcars[mtcars$hp > 100,]
mtcars[mtcars$hp > 200,]
head(mtcars)
names(mtcars)
mtcars[is.na(mtcars$mpg)]
is.na(mtcars$mgs)
apply(mtcars,2,is.na)
apply(mtcars,2,is.na)
x <- c(1,1,2,3,5,8)
x[c(T,T,F,F,T,T)]
a <- matrix(1:9, nrow = 3)
a
colnames(a) <- c("A","B", "C")
a
a[c(T,F,T), c("B","A")]
df
str(df)
df[df$y > 1,]
mtcars
head(mtcars)
mtcars[mtcars$cyl == 8]
mtcars[,mtcars$cyl == 8]
mtcars[,mtcars$cyl == 8,]
mtcars[mtcars$cyl == 8,]
mtcars[, mtcars$cyl == 8]
mtcars[mtcars$cyl == 8,]
melt(mtcars)
help(pam)
help(cluster)
library(cluster)
help(cluster)
df1 = data.frame(CustomerId=c(1:6),Product=c(rep("Toaster",3),rep("Radio",3)))
df2 = data.frame(CustomerId=c(2,4,6),State=c(rep("Alabama",2),rep("Ohio",1)))
df1
df2
outer <- merge(x = df1, y = df2, by = "CustomerId", all = TRUE)
outer
outer[is.na(outer$State)]
outer$State
outer[is.na(,outer$State)]
outer[is.na(outer$State)]
is.na(outer$State)
outer$State(is.na(outer$State))
outer$State[is.na(outer$State)]
outer$State[is.na(outer$State)] <- 0
outer$State[is.na(outer$State) <- 0]
outer
left.outer <- merge(x = df1, y = df2, by = "CustomerId", all.x=TRUE)
left.outer
right.outer <- merge(x = df1, y = df2, by = "CustomerId", all.y=TRUE)
right.outer
cross.join <- merge(x = df1, y = df2, by = NULL)
cross.join
library(lubridate)
install.packages("lubridate")
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
install.packages("digest")
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("lubridate")
R.version()
R
R.version
library("twitteR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("devtools")
install.packages("bit64")
install.packages("httr")
api_key <-"pZsNCkOSPb3oFlw6ZHf7q5rsc"
api_secret <-"bIEimC1fRBNf5b9sQyL0LboFsj2Y5sUVkXvmfEOQXJtiQmllOU"
access_token <-"75807850-pbK8CxU9DVN3T0XUbz0o56IdReNVqUs0ChpTIopU7"
access_token_secret <-"KxUU8YAzsUirBKW9QAh2Df1dpSZvAUb3bte05hziDZdSh"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
load(twitteR)
detach("package:twitteR", unload=TRUE)
library("twitteR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(twitteR)
?twitteR
install.packages("ROAuth")
library("ROAuth", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
install.packages("httr")
CONSUMER_KEY = "pZsNCkOSPb3oFlw6ZHf7q5rsc"
consumer_key = "pZsNCkOSPb3oFlw6ZHf7q5rsc"
consumer_secret = "bIEimC1fRBNf5b9sQyL0LboFsj2Y5sUVkXvmfEOQXJtiQmllOU"
getTwitterOAuth(consumer_key, consumer_secret)
?getTwitterOAuth
install.packages("ROAuth")
install.packages("ROAuth")
install.packages(twitteR)
install.packages(twitteR)
load(twitteR)
load(twiteR)
library("twitteR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(twitteR)
consumer_key = "pZsNCkOSPb3oFlw6ZHf7q5rsc"
consumer_secret = "bIEimC1fRBNf5b9sQyL0LboFsj2Y5sUVkXvmfEOQXJtiQmllOU"
getTwitterOAuth(consumer_key, consumer_secret)
api_key <-"pZsNCkOSPb3oFlw6ZHf7q5rsc"
api_secret <-"bIEimC1fRBNf5b9sQyL0LboFsj2Y5sUVkXvmfEOQXJtiQmllOU"
access_token <-"75807850-pbK8CxU9DVN3T0XUbz0o56IdReNVqUs0ChpTIopU7"
access_token_secret <-"KxUU8YAzsUirBKW9QAh2Df1dpSZvAUb3bte05hziDZdSh"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
install.packages("ROAuth")
library(ROAuth)
getTwitterOAuth(consumer_key, consumer_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "https://api.twitter.com/oauth/access_token"
authURL = "http://api.twitter.com/oauth/authorize"
consumerKey = "pZsNCkOSPb3oFlw6ZHf7q5rsc"
consumerSecret = "bIEimC1fRBNf5b9sQyL0LboFsj2Y5sUVkXvmfEOQXJtiQmllOU"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret = consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
registerTwitterOAuth(Cred)
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
registerTwitterOAuth(Cred)
cred = getTwitterOAuth()
library(RCurl)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package="RCurl"))
registerTwitterOAuth(Cred)
Athletics.list <- searchTwitter('#Athletics', n=1000, cainfo='cacert.pem')
Athletics.list
save(Cred, file="twitter_authentication.Rdata")
Athletics.df <- twListToDF(Athletics.list)
?twListToDF
Athletics.list <- searchTwitter('#Athletics', n=1000, cainfo='cacert.pem')
Athletics.df <- twListToDF(Athletics.list)
install.package("plyr")
install.package("stringr")
library(plyr)
library(stringr)
library(ggplot2)
Athletics.df <- twListToDF(Athletics.list)
Athletics.df <- twListToDF(Athletics.list)
str(Athletics.df)
Athletics.df$screenName
table(Athletics.df$screenName)
ath_tab = melt(table(Athletics.df$screenName))
library(reshape2)
ath_tab = melt(table(Athletics.df$screenName))
arrange(ath_tab,desc(value))
Athletics.list <- searchTwitter('#Athletics', n=1000, cainfo='cacert.pem')
Athletics.df <- twListToDF(Athletics.list)
str(Athletics.df)
ath_tab = melt(table(Athletics.df$screenName))
arrange(ath_tab,desc(value))
searchTwitter('#Obama', n=10, cainfo='cacert.pem')
obama.list = searchTwitter('#Obama', n=100, cainfo='cacert.pem')
obama_df = twListToDF(obama.list)
str(obama_df)
obama_df$text
obama_df$text
class(Athletics.list)
x = Athletics.list[[1]]
x
x.getScreenName()
x$getScreenName
x$getScreenName()
x$ScreenName
x
x = Athletics.list[[2]]
x
str(x)
x$screenName
x.getId()
x.getId
x$getId
x$getId()
x$getFavorited()
str(obama)
str(obama_df)
obama_tweets = searchTwitter('#Obama', n=200, cainfo='cacert.pem')
obama.text = laply(obama.tweets, function(t) t$getText())
obama_text = laply(obama_tweets, function(t) t$getText())
length(obama_text)
head(obama_text,10)
class(obama_text)
install.packages("broom")
install.packages("dplyr")
install.packages("dplyr")
library("ROAuth", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
install.packages("dplyr")
install.packages("dplyr")
setwd("/Users/stuart/R_Files")
library(dplyr)
library(RCurl)
install.packages("RCurl")
library(RCurl)
options(digits = 6)
library(hflights)
install.packages("hflights")
library(hflights)
data(hflights)
head(hflights)
flights = tbl_df(hflights)
glimpse(flights)
select(flights, DepTime,ArrTime,FlightNum)
glimpse(flights)
install.packages("gmodels")
install.packages("kernlab")
install.packages("e1071")
install.packages("mclust")
install.packages("psych")
flights %>%
group_by(Month, DayofMonth) %>%
summarise(flight_count = n()) %>%
arrange(desc(flight_count))
136/9
install.packages(c("class", "cluster", "codetools", "dplyr", "MASS"))
install.packages(c("KernSmooth", "mgcv"))
install.packages(c("boot", "nlme"))
install.packages("ggvis")
install.packages("ggvis")
install.packages("tidyr")
install.packages("nycflights13")
library("aod", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
setwd("/Users/stuart/R_Files/Statistics Class")
install.packages("aod")
install.packages("aod")
setwd("/Users/stuart/R_Files/Statistics Class")
library(psych)
library(aod)
library(QuantPsyc)
BL <- read.table("Stats1.13.Lab.10.txt", header = T)
str(BL)
max(BL$verdict)
min(BL$verdict)
lrfit <- glm(BL$verdict ~ BL$danger + BL$rehab + BL$punish + BL$gendet + BL$specdet + BL$incap, family = binomial)
summary(lrfit)
?with
